{
  "TECHNICAL": {
    "VERSION_DO_NOT_EDIT": 2.0,
    "FORCE_RESET": false
  },
  // This config file uses a custom defined parser. That's why there are comments here, they wouldn't be valid in any other .json file.
  //    To add a comment yourself, just start a line with // like I did here
  //    (although their main use is explaining you what the entries do)
  // CATEGORY: ENCHANTING
  "enchantments": {
    "enchant_limiter": {
      // Limits how many enchantments can be added to an item. Set it to -1 to disable the limiter,
      //    and to 0 to disable enchanting as a whole
      "default": 3,
      // Should curses add enchantment slots instead of using them
      "curses_add_slots": true,
      // Override modes include "relative" and "absolute".
      //    If set to "relative", the overrides defined below will be added onto the default limit.
      //    If set to "absolute", they'll replace the default limits.
      "override_mode": "relative",
      // Overrides to the amount of enchantments an item can have. Must be of the form "modid:itemid": value
      "overrides": {
        "minecraft:golden_pickaxe": 1,
        "minecraft:golden_axe": 1,
        "minecraft:golden_hoe": 1,
        "minecraft:golden_sword": 1,
        "minecraft:golden_helmet": 1,
        "minecraft:golden_chestplate": 1,
        "minecraft:golden_leggings": 1,
        "minecraft:golden_boots": 1,
        "aether:golden_gloves": 1,
        "shieldexp:golden_shield": 1,
        "farmersdelight:golden_knife": 1,
        "tide:golden_fishing_rod": 1,
        "aquamirae:coral_lance": 1,
        "aquamirae:poisoned_chakra": 1,
        "aquamirae:maze_rose": 1
      },
      // Should an item's maximum enchantments be displayed even when it is not enchanted
      "always_show_limit": true,
      "limitite": {
        // Should Limitite have an enchantment glint
        "is_foil": true,
        // 1 in X chance for Limitite to spawn as loot in chests. Set to 0 or lower to disable it
        "loot_weight": 0,
        // How many Limitites can be applied to a single item
        "max_limit_break": 3
      }
    },
    "enchant_catalyst": {
      // Should Enchanted Books be usable as catalysts to increase the odds of getting their enchantments
      // If this is set to false and no catalyst is loaded from datapacks, the module will be disabled
      "allow_books": true,
      // Chance (0 - 1) for non book catalysts to activate for each option in the enchanting table
      "activation_chance": 0.5,
      // Should items usable as catalysts display it in their tooltip
      "show_in_tooltip": true,
      // If true, the default enchant logic will be removed, meaning a catalyst *must* be used in order to get enchants at an enchanting table
      "override_default_enchanting": false
    },
    // Allow using Enchanted Books on items in inventory
    "allow_inventory_enchanting": false,
    // Should the Magic Protection enchantment be compatible with vanilla Protection enchantments
    "magic_protection_protection_compatibility": false,
    // Feather Falling at this level completely negates fall damage (should be set to the maximum if enabled, or higher if disabled)
    "better_feather_falling": 99,
    // Unbreaking at this level makes an item completely unbreakable (should be set to the maximum if enabled, or higher if disabled)
    "better_unbreaking": 99,
    // Should Magic Protection also give a level*5 chance to dodge any attack
    "better_magic_protection": false,
    // Should Fire Protection at this level on every armor slot at once grant fire immunity
    "better_fire_protection": 99,
    // Should Bane of Arthropods apply a 0.5*(level + 1) seconds of slowness on hit
    "better_bane_of_arthropods": true,
    // Set these to false to disable the corresponding enchantment from appearing in game (it won't be registered)
    "enabled_enchants": {
      "potency": false,
      "stability": false,
      "chaining": false,
      "focus": false,
      "wisdom": false,
      "push": false,
      "pull": false,
      "brazier": false,
      "blizzard": false,
      "blast": false,
      "blitz": false,
      "bonk": false,
      "ignorance_curse": false,
      "magic_protection": true,
      "arcane": false,
      "soulbound": true
    }
  },
  // CATEGORY: EXPERIENCE
  "experience": {
    "witch_hat": {
      // Should the Witch Hat be registered as an item
      "enable": true,
      // Chance for the Witch Hat to drop when killing a Witch. Set to 0 to disable the drop
      "drop_chance": 0.25,
      // How many extra experience points should drop when killing a monster with the Witch Hat equipped
      "xp_bonus": 4
    },
    // Should enchanting in an enchanting table cost more xp than the default 1 2 3 levels
    "increased_enchant_costs": true,
    // If the above is true, defines the new costs to replace 1 2 3
    "costs": [
      1,
      3,
      7
    ],
    // If increased_enchant_costs is true, defines the required xp levels to enchants
    "needed": [
      5,
      10,
      15
    ],
    // Should Anvils never cost experience
    "no_xp_anvil": false,
    // Maximum experience level a player can have before it can't increase anymore. Set to -1 to disable the limit,
    //    and to 0 to disable experience
    "level_cap": 100,
    // How much xp points are needed to level up, in place of the exponential formula vanilla has.
    //    Set to 0 or lower to use vanilla's formula
    "linear_xp_requirement": 50,
    // Should monsters have a chance to give a bunch of extra experience points when killed
    "xp_bounty": {
      // Should the sortilege:bounties tag act as a whitelist instead of a blacklist. It defines which mobs can drop bounties
      "tag_is_whitelist": false,
      // Amount of xp points bounties drop
      "value": 20,
      // Chance for a bounty to happen
      "chance": 0.1
    },
    // Locks certain recipes behind experience levels or advancements.
    //    Each entry must be of the form "modid:recipeid": minimalxplevel or "modid:recipeid": "advancementid"
    //    The default config locks the crafting of Ender Eyes behind level 30 and the Beacon behind summoning the Wither, as an example
    "recipe_locks": {
    }
  },
  // CATEGORY: DEATH
  "death": {
    // Enable a balanced keepInventory only for experience
    "xp_keeping": {
      "enable": true,
      // Should players killed by players drop their xp or give it to their assassin directly
      "allow_stealing_from_players": true,
      // Ratio of xp kept on death
      "self_ratio": 0.3,
      // Ratio of xp stolen by the attacker, and dropped back when it's killed
      "attacker_ratio": 0.5,
      // Ratio of xp dropped on the ground on death
      "drop_ratio": 0.2,
      // Entity data id to use to store stolen xp. Only change this if the default is causing conflicts
      "stolen_xp_data": 254
    },
    // Keep equipped items (armor and hotbar) on death
    "keep_equipped": true,
    // Should the Soulbound enchantment be removed on use
    "consume_soulbound": false,
    // Display death coordinates instead of the score from vanilla on the death screen
    "show_coordinates_on_death": false,
    // Should the mob that killed you be made glowing
    "glowing_killer": true
  },
  // CATEGORY: BREWING
  "brewing": {
    "antidote": {
      // Should Antidotes be registered as items
      "enable": true,
      // A list of potion effects for which Antidotes don't get registered
      "effect_blacklist": [],
      "stack_size": 8,
      // For how many seconds Antidotes make you immune to their effect after drinking. Set to 0 or lower to disable extra immunity
      "immunity_time": 600
    },
    "potion": {
      "stack_size": 8,
      // Value to multiply all potions effects length by.
      //    For example, if this is 2, then all effects gained *from potions* will last twice as long
      //    This has no effect on potions whose effects were overridden by datapack
      "duration_multiplier": 1,
      // How many ticks should drinking a potion take. 20t = 1s
      "drinking_time": 30,
      // How many ticks of cooldown potions get after being drank or thrown
      "cooldown": 140
    },
    "cauldron": {
      // Should cauldron brewing be enabled
      "enable": true,
      // To disable cauldrons from filling over time automatically if above a soul campfire,
      //    override the #sortilege:refills_cauldrons block tag to be empty
      // If true, dropping blaze powder into a cauldron containing potion will increment its fluid level by 1 (up to 3)
      "blaze_powder_refill": false,
      // If true, cauldrons generated in Swamp Huts will have a random potion inside
      "fill_swamp_huts_randomly": true,
      // A list of effect ids that are not allowed to generate in swamp huts
      "swamp_hut_blacklist": []
    }
  },
  // CATEGORY: EQUIPMENT
  "equipment": {
    "lapis_shield": {
      // Should the Witch Hat be registered as an item
      "enable": true,
      // How many durability points do Lapis Shields have
      "durability": 200,
      // How many ticks between each Lapis Shield dodge, in ticks (20t = 1s)
      "cooldown": 100
    },
    // CATEGORY: STAFFS
    "staffs": {
      "overcharge": {
        // Maximal overcharge a staff can hold at any given time
        "max_overcharge": 20,
        // Color for the overcharge bar. Hexadecimal format
        "bar_color": "#0000ff",
        // Should overcharged staffs not use durability
        "free_durability": true,
        // Should overcharged staffs not use experience
        "free_experience": true,
        // Which items can be used to overcharge staffs. Must be formatted as "modid:itemid": value
        "ingredients": {
          "minecraft:lapis_lazuli": 2,
          "minecraft:lapis_block": 20
        }
      },
      // Amount of xp points needed to use a staff, if not set
      "default_xp_cost": 0,
      // Time staffs need to be held down (in ticks) before shooting, if not set
      "default_charge_time": 1,
      "entries": []
    }
  }
}